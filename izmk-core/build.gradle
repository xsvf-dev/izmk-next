import ovo.xsvf.task.AccessorTask

plugins {
    id 'java'
    id 'com.gradleup.shadow' version '9.0.0-beta8'
    id 'net.minecraftforge.gradle' version '[6.0.24,6.2)'
    id 'org.parchmentmc.librarian.forgegradle' version '1.+'
    id 'org.jetbrains.kotlin.jvm'
}

group = 'ovo.xsvf'
version = '1.0-SNAPSHOT'

minecraft {
    mappings channel: mapping_channel, version: mapping_version

    reobf = false
    copyIdeResources = true
}

sourceSets.main.resources { srcDir 'src/generated/resources' }

sourceSets.each {
    def dir = layout.buildDirectory.dir("sourcesSets/$it.name")
    it.output.resourcesDir = dir
    it.java.destinationDirectory = dir
}

configurations {
    shade
    implementation.extendsFrom shade
}

jar {
    archiveClassifier = 'slim'
}

dependencies {
    minecraft "net.minecraftforge:forge:${minecraft_version}-${forge_version}"

    shade project(':izmk-common')
    shade "org.jetbrains.kotlin:kotlin-stdlib-jdk8"
    shade "org.jetbrains.kotlinx:kotlinx-coroutines-core:1.6.1"
    shade "com.twelvemonkeys.imageio:imageio-core:3.7.0"
    shade 'com.twelvemonkeys.imageio:imageio-metadata:3.7.1'
    shade "com.twelvemonkeys.imageio:imageio-webp:3.7.1"
    shade "dev.luna5ama:kmogus-core:1.1-SNAPSHOT"
    shade "dev.luna5ama:kmogus-struct-api:1.1-SNAPSHOT"

    testImplementation "it.unimi.dsi:fastutil:8.5.6"
    testImplementation "org.junit.jupiter:junit-jupiter-api:5.8.2"
    testImplementation "org.junit.jupiter:junit-jupiter-engine:5.8.2"
    testImplementation "org.junit.platform:junit-platform-commons:1.8.2"
    testImplementation "org.mockito:mockito-core:4.3.1"
    testImplementation "org.mockito:mockito-junit-jupiter:4.3.1"
    testImplementation project(':izmk-common')
    testImplementation project(':izmk-loader')
}

tasks.register('accessor', AccessorTask) {
    dependsOn shadowJar

    targetFile = tasks.shadowJar.archiveFile.get().asFile
    outputFile = tasks.shadowJar.archiveFile.get().asFile
    libs.add(targetFile.toPath())
    libs.addAll(fileTree("$rootDir/minecraft/libs").collect { it.toPath() })
}

shadowJar {
    configurations = [project.configurations.shade]
    archiveClassifier = ''

    finalizedBy accessor
}

repositories {
    mavenCentral()
}

kotlin {
    jvmToolchain(21)
}